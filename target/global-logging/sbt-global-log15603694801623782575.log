[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\andre\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\andre\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.5)
[debug]       Load.loadUnit: plugins took 81.2352ms
[debug]       Load.loadUnit: defsScala took 0.2766ms
[debug] [Loading] Scanning directory C:\Users\andre\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\andre\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.6458 ms
[debug]           Load.resolveProject(global-plugins) took 40.859ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\andre\.sbt\1.0\plugins, plugins: List(<none>))) took 80.589ms
[debug] [Loading] Done in C:\Users\andre\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 99.5012ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2317ms
[debug]     Load.loadUnit(file:/C:/Users/andre/.sbt/1.0/plugins/, ...) took 189.4009ms
[debug]   Load.apply: load took 340.7118ms
[debug]   Load.apply: resolveProjects took 6.1377ms
[debug]   Load.apply: finalTransforms took 56.6742ms
[debug]   Load.apply: config.delegates took 6.7827ms
[debug]   Load.apply: Def.make(settings)... took 495.2055ms
[debug]   Load.apply: structureIndex took 113.2654ms
[debug]   Load.apply: mkStreams took 1.6232ms
[info] loading global plugins from C:\Users\andre\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2744.2989ms
[debug]           Load.loadUnit: plugins took 30.5525ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory F:\Progetti\Lab_PPS\pps-22-23-lab03\project
[debug]             Load.loadUnit: mkEval took 6.1985ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab03\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.1221 ms
[info] loading settings for project pps-22-23-lab03-build from idea1.sbt ...
[debug]               Load.resolveProject(pps-22-23-lab03-build) took 3.8371ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pps-22-23-lab03-build, base: F:\Progetti\Lab_PPS\pps-22-23-lab03\project, plugins: List(<none>))) took 18.4105ms
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab03\project, returning: (pps-22-23-lab03-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2270.1181ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9069ms
[debug]         Load.loadUnit(file:/F:/Progetti/Lab_PPS/pps-22-23-lab03/project/, ...) took 2306.4071ms
[debug]       Load.apply: load took 2308.6928ms
[debug]       Load.apply: resolveProjects took 0.529ms
[debug]       Load.apply: finalTransforms took 38.7711ms
[debug]       Load.apply: config.delegates took 2.1249ms
[debug]       Load.apply: Def.make(settings)... took 150.7728ms
[debug]       Load.apply: structureIndex took 36.1671ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from F:\Progetti\Lab_PPS\pps-22-23-lab03\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4028.0301ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory F:\Progetti\Lab_PPS\pps-22-23-lab03
[debug]       Load.loadUnit: mkEval took 0.1581ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8017 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 28.7952ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: F:\Progetti\Lab_PPS\pps-22-23-lab03, plugins: List(<none>))) took 32.0307ms
[debug] [Loading] Done in F:\Progetti\Lab_PPS\pps-22-23-lab03, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 967.7406ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.1167ms
[debug]   Load.loadUnit(file:/F:/Progetti/Lab_PPS/pps-22-23-lab03/, ...) took 5002.552ms
[debug] Load.apply: load took 5003.7173ms
[debug] Load.apply: resolveProjects took 0.0738ms
[debug] Load.apply: finalTransforms took 23.6822ms
[debug] Load.apply: config.delegates took 0.2558ms
[debug] Load.apply: Def.make(settings)... took 76.6547ms
[debug] Load.apply: structureIndex took 29.2958ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to pps-code-lab-3 (in build file:/F:/Progetti/Lab_PPS/pps-22-23-lab03/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56075 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56075, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to pps-code-lab-3 (in build file:/F:/Progetti/Lab_PPS/pps-22-23-lab03/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
